/**
* This is an autogenerated file created by the Stencil compiler.
* It contains typing information for all components that exist in this project.
*/
/* tslint:disable */

import { JSXElements } from '@stencil/core';




declare namespace StencilComponents {

  interface MyComponent {}
  interface MyComponentAttributes extends JSXElements.HTMLAttributes {}
}

export interface LocalIntrinsicElements {
  'my-component': StencilComponents.MyComponentAttributes;
}

declare global {

  interface HTMLMyComponentElement extends StencilComponents.MyComponent, HTMLStencilElement {}
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };

  interface HTMLElementTagNameMap {
    'my-component': HTMLMyComponentElement
  }

  interface ElementTagNameMap {
    'my-component': HTMLMyComponentElement;
  }
}


import { DefaultIntrinsicElements } from '@stencil/core';

declare global {
  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends LocalIntrinsicElements, DefaultIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends JSXElements.HTMLAttributes {}
}

export declare function defineCustomElements(window: any): void;